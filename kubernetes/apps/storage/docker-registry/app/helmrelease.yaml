---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: docker-registry
  namespace: flux-system
spec:
  chart:
    spec:
      chart: docker-registry
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: twuni
        namespace: flux-system
      version: 2.2.3
  interval: 1m0s
  values:
    autoscaling:
      behavior: {}
      enabled: false
      maxReplicas: 2
      minReplicas: 1
      targetCPUUtilizationPercentage: 60
      targetMemoryUtilizationPercentage: 60
    configData:
      health:
        storagedriver:
          enabled: true
          interval: 10s
          threshold: 3
      http:
        addr: :5000
        debug:
          addr: :5001
          prometheus:
            enabled: false
            path: /metrics
        headers:
          X-Content-Type-Options:
            - nosniff
      log:
        accesslog:
          disabled: false
        fields:
          service: registry
        level: debug
      storage:
        cache:
          blobdescriptor: inmemory
        delete:
          enabled: true
        filesystem:
          rootdirectory: /var/lib/registry
      version: 0.1
    extraEnvVars: []
    extraVolumeMounts: []
    extraVolumes: []
    image:
      pullPolicy: IfNotPresent
      repository: registry
      tag: 2.8.1
    ingress:
      annotations:
        external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
      className: internal
      enabled: true
      hosts:
        - &host "registry.${SECRET_DOMAIN}"
      labels: {}
      path: /
      tls: *host
    metrics:
      enabled: false
      port: 5001
      prometheusRule:
        enabled: false
        labels: {}
        rules: {}
      serviceMonitor:
        enabled: false
        labels: {}
    persistence:
      accessMode: ReadWriteOnce
      enabled: true
      existingClaim: docker-registry-pvc
      size: 10Gi
    podAnnotations: {}
    podDisruptionBudget: {}
    podLabels: {}
    priorityClassName: ""
    proxy:
      enabled: false
      password: ""
      remoteurl: https://registry-1.docker.io
      secretRef: ""
      username: ""
    replicaCount: 1
    resources: {}
    securityContext:
      enabled: true
      fsGroup: 1000
      runAsUser: 1000
    service:
      annotations: {}
      name: registry
      port: 5000
      type: ClusterIP
    serviceAccount:
      annotations: {}
      create: false
      name: ""
    storage: filesystem
    tolerations: []
    updateStrategy: {}
